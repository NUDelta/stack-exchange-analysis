<posthistory>
    <row Id="886" PostHistoryTypeId="2" PostId="811" RevisionGUID="38acfefc-3180-490d-b608-afda4a22dc36"
         CreationDate="2008-08-03T20:35:16.697" UserId="1384652"
         Text="My short answer, because people are more familiar with relational databases and if they work, is there a **need** to learn something new? I'm not saying that's a **good** thing but at University I was not taught OODBs, I've seen at least 5 times as much on the web about Relational than I have about OODBs."/>
    <row Id="890" PostHistoryTypeId="2" PostId="815" RevisionGUID="42b17164-8585-4b3c-86f3-8b2eabd5a285"
         CreationDate="2008-08-03T20:39:22.807" UserId="198"
         Text="&gt; To my mind 99% of websites are not&#xD;&#xA;&gt; massive, and enterprise issues never&#xD;&#xA;&gt; need to be thought about, so why arn't&#xD;&#xA;&gt; OO DBs more widely used?&#xD;&#xA;&#xD;&#xA;I think you give the answer yourself. If you have a very small app, no massive data -  so no need to think about performance - than you can as well use an ORM tool. It's easy to set up a relational database, with standard configuration and get started using hibernate or something."/>
    <row Id="891" PostHistoryTypeId="2" PostId="817" RevisionGUID="db6dcc53-88d8-4f32-85d2-8799b590d467"
         CreationDate="2008-08-03T20:40:33.707" UserId="234"
         Text="The magic all seems to be in &#xD;&#xA;&#xD;&#xA;    visitortime.getTimezoneOffset()&#xD;&#xA;&#xD;&#xA;That's cool, I didn't know about that. Does it work in IE, etc?&#xD;&#xA;From there you should be able to use JS to ajax, set cookies, whatever. I'd probably go the cookie route myself.&#xD;&#xA;&#xD;&#xA;You'll need to allow the user to change it though. We tried to use geolocation (via maxmind) to do this a while ago, and it was wrong reasonably often - enough to make it not worth doing, so we just let the user set it in their profile, and show a notice to users who haven't set theirs yet."/>
    <row Id="894" PostHistoryTypeId="2" PostId="818" RevisionGUID="31f131a9-896c-4896-af0f-d41c622f2868"
         CreationDate="2008-08-03T20:45:27.350" UserId="233"
         Text="I'm partway to my solution with this entry on MSDN (don't know how I couldn't find it before).&#xD;&#xA;&#xD;&#xA;User/Machine Hive    &#xD;&#xA;Subkeys and values entered under this hive will be installed under the HKEY_CURRENT_USER hive when a user chooses &quot;Just Me&quot; or the HKEY_USERS hive or when a user chooses &quot;Everyone&quot; during installation.&#xD;&#xA;&#xD;&#xA;[http://msdn.microsoft.com/en-us/library/x6kd89c5(VS.80).aspx][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://msdn.microsoft.com/en-us/library/x6kd89c5(VS.80).aspx"/>
    <row Id="895" PostHistoryTypeId="2" PostId="819" RevisionGUID="8f3b28e2-b05e-48d7-9c1d-e3810ec3ce75"
         CreationDate="2008-08-03T20:45:51.777" UserId="232"
         Text="In the vein of portability, I'd use relational.  Moving a website from one host to another would be a nightmare with some niche DBMS.  Almost all hosting providers offer MSSQL and MySQL these days."/>
    <row Id="896" PostHistoryTypeId="2" PostId="820" RevisionGUID="9b66828a-d4cd-48ef-993b-715255534b3e"
         CreationDate="2008-08-03T20:48:47.263" UserId="91"
         Text="First: Yes, this is something that belongs in the Application for the exact reson you specified: What happens after new user profiles are created? Sure, if you're using a domain it's possible to have some stuff put in the registry on creation, but this is not really a use case. The Application should check if there are seetings and use the default settings if not.&#xD;&#xA;&#xD;&#xA;That being said, it IS possible to change other users Keys through the HKEY_USERS Hive.&#xD;&#xA;&#xD;&#xA;I have no experience with the Visual Studio 2003 Setup Project, so here is a bit of (totally unrelated) VBScript code that might just give you an idea where to look:&#xD;&#xA;&#xD;&#xA;    const HKEY_USERS = &amp;H80000003&#xD;&#xA;    strComputer = &quot;.&quot;&#xD;&#xA;    Set objReg=GetObject(&quot;winmgmts:{impersonationLevel=impersonate}!\\&quot; &amp; strComputer &amp; &quot;\root\default:StdRegProv&quot;)&#xD;&#xA;    strKeyPath = &quot;&quot;&#xD;&#xA;    objReg.EnumKey HKEY_USERS, strKeyPath, arrSubKeys&#xD;&#xA;    strKeyPath = &quot;\Software\Microsoft\Windows\CurrentVersion\WinTrust\Trust Providers\Software Publishing&quot;&#xD;&#xA;    For Each subkey In arrSubKeys&#xD;&#xA;        objReg.SetDWORDValue HKEY_USERS, subkey &amp; strKeyPath, &quot;State&quot;, 146944&#xD;&#xA;    Next&#xD;&#xA;&#xD;&#xA;(Code Courtesy of [Jeroen Ritmeijer][1])&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://jritmeijer.spaces.live.com/blog/cns!8A48A27460FB898A!965.entry"/>
    <row Id="906" PostHistoryTypeId="2" PostId="834" RevisionGUID="17c75104-6cfc-4383-9b37-107938f0f155"
         CreationDate="2008-08-03T21:24:56.160" UserId="200"
         Text="If you are looking for a truly language agnostic solution then you will be sorely disappointed in my opinion because you'll be stuck with a for loop and some conditionals. However if you opened it up to functional languages or functional language features (I'm looking at you LINQ) then my colleagues here can fill this page with elegant examples in Ruby, Lisp, Erlang, and others."/>
    <row Id="907" PostHistoryTypeId="2" PostId="836" RevisionGUID="c1fcbc6a-28b2-44ec-8883-31dd8d1e4124"
         CreationDate="2008-08-03T21:31:14.353" UserId="204"
         Text="Looks like a web service is going to be the answer for me. On a production box I'd rather not have to go through compiling and maintaining my own special installation of PHP since ODBC support needs to be compiled in, according to the PHP documentation.&#xD;&#xA;&#xD;&#xA;Thanks for the suggestion!"/>
    <row Id="908" PostHistoryTypeId="2" PostId="838" RevisionGUID="b772791a-08af-4aaf-829b-e722f8cf28c1"
         CreationDate="2008-08-03T21:31:40.187" UserId="60"
         Text="If you expect infrequent collisions, [Optimistic Concurrency][1] is probably your best bet.&#xD;&#xA;&#xD;&#xA;Scott Mitchell wrote a comprehensive tutorial on implementing that pattern:  [http://www.asp.net/Learn/data-access/tutorial-21-cs.aspx][2]&#xD;&#xA;&#xD;&#xA;  [1]: http://msdn.microsoft.com/en-us/library/aa0416cz.aspx&#xD;&#xA;  [2]: http://www.asp.net/Learn/data-access/tutorial-21-cs.aspx"/>
</posthistory>
